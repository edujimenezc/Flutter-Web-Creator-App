apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.service.type: LoadBalancer
    kompose.version: 1.26.0 (40646f478)
  creationTimestamp: null
  labels:
    io.kompose.service: front
  name: front
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: front
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.service.type: LoadBalancer
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: front
    spec:
      containers:
        - image: edujc/test0
          imagePullPolicy: Always
          name: front

          ports:
            - containerPort: 80
          resources: {}
      restartPolicy: Always
status: {}


---


apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.service.type: LoadBalancer
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: front-tcp
  name: front-tcp
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 80
  selector:
    io.kompose.service: front
  type: ClusterIP
status:
  loadBalancer: {}



---



apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: http-ingress
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: front-tcp
            port:
              number: 80